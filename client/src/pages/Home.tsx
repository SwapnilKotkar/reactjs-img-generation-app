import React, { useState, useEffect } from "react";
import { Loader, FormField, Card } from "../components";

const RenderCards = ({
	data,
	title,
}: {
	data: Post[] | null;
	title: string;
}) => {
	if (data && data?.length > 0) {
		return data.map((post) => <Card key={post._id} {...post} />);
	}

	return (
		<h2 className="mt-5 font-bold text-primary text-xl uppercase">{title}</h2>
	);
};

export interface Post {
	_id: string;
	name: string;
	prompt: string;
	photo: string;
}

const Home = () => {
	const [loading, setLoading] = useState<boolean>(false);
	const [allPosts, setAllPosts] = useState<Post[] | null>(null);
	const [searchText, setSearchText] = useState<string>("");
	const [searchResults, setSearchResults] = useState<Post[] | null>(null);
	const [searchTimeOut, setSearchTimeOut] = useState<
		NodeJS.Timeout | undefined
	>();

	useEffect(() => {
		const fetchPosts = async () => {
			setLoading(true);

			try {
				const response = await fetch("http://localhost:8080/api/v1/post", {
					method: "GET",
					headers: {
						"Content-Type": "application/json",
					},
				});

				if (response.ok) {
					const result = await response.json();

					setAllPosts(result.data.reverse());
				}
			} catch (error) {
				console.log("error while fetching posts---", error);
			} finally {
				setLoading(false);
			}
		};

		fetchPosts();
	}, []);

	const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setSearchText(e.target.value);

		setSearchTimeOut(
			setTimeout(() => {
				const search_results = allPosts
					? allPosts.filter(
							(item) =>
								item.name.toLowerCase().includes(searchText.toLowerCase()) ||
								item.prompt.toLowerCase().includes(searchText.toLowerCase())
					  )
					: null;

				setSearchResults(search_results);
			}, 500)
		);
	};

	return (
		<section className="max-w-7xl mx-auto">
			<div>
				<h1 className="font-extrabold text-foreground text-[32px]">
					The Community Showcase
				</h1>
				<p className="mt-2 text-muted-foreground text-[16px] max-w-[500px]">
					Browse through a collection of imaginative and visually stunning
					images generated by DALL-E AI
				</p>
			</div>

			<div className="mt-16">
				<FormField
					labelName="Search posts"
					type="text"
					name="text"
					placeholder="Search posts"
					value={searchText}
					handleChange={handleSearchChange}
				/>
			</div>

			<div className="mt-10">
				{loading ? (
					<div className="flex justify-center items-center">
						<Loader />
					</div>
				) : (
					<>
						{searchText && (
							<h2 className="font-medium text-muted-foreground text-xl mb-3">
								Showing results for{" "}
								<span className="text-primary">{searchText}</span>
							</h2>
						)}
						<div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
							{searchText ? (
								<RenderCards
									data={searchResults}
									title="No search results found"
								/>
							) : (
								<RenderCards data={allPosts} title="No posts found" />
							)}
						</div>
					</>
				)}
			</div>
		</section>
	);
};

export default Home;
